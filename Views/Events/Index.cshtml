@model IEnumerable<Event>

@{
    ViewData["Title"] = "Events";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-5 text-white">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="section-title">Upcoming Events</h2>

        <a asp-action="Create" class="btn btn-success">
            <i class="bi bi-plus-circle me-2"></i>Create New Event
        </a>
    </div>

    <!-- Search and Filter Section -->
    <div class="card bg-dark border-secondary mb-4">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-text bg-dark border-secondary text-light">
                            <i class="bi bi-search"></i>
                        </span>
                        <input type="text" id="searchEvents" class="form-control bg-dark border-secondary text-white" placeholder="Search events...">
                    </div>
                </div>
                <div class="col-md-3">
                    <select id="venueFilter" class="form-select bg-dark border-secondary text-white">
                        <option value="">All Venues</option>
                        @foreach (var venue in Model.Select(e => e.Venue).DistinctBy(v => v.VenueId))
                        {
                            <option value="@venue.VenueId">@venue.VenueName</option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <select id="dateFilter" class="form-select bg-dark border-secondary text-white">
                        <option value="">All Dates</option>
                        <option value="today">Today</option>
                        <option value="week">This Week</option>
                        <option value="month">This Month</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    <!-- Event Cards -->
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4 mb-4" id="eventContainer">
        @foreach (var item in Model)
        {
            <div class="col event-card" data-venue-id="@item.Venue?.VenueId" data-event-date="@item.EventDate.ToString("yyyy-MM-dd")">
                <div class="card h-100 bg-dark border-secondary text-white hover-card">
                    @if (!string.IsNullOrEmpty(item.Venue?.ImageUrl))
                    {
                        <img src="@item.Venue.ImageUrl" class="card-img-top event-img" alt="@item.Venue.VenueName" />
                    }
                    else
                    {
                        <div class="bg-secondary bg-opacity-25 d-flex align-items-center justify-content-center" style="height: 160px">
                            <i class="bi bi-calendar-event text-muted" style="font-size: 3rem"></i>
                        </div>
                    }
                    <div class="badge bg-primary position-absolute top-0 end-0 m-2">
                        @item.EventDate.ToString("MMM dd")
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@item.EventName</h5>
                        <div class="d-flex align-items-center mb-2 text-muted">
                            <i class="bi bi-clock me-2"></i>
                            @item.EventDate.ToString("h:mm tt")
                        </div>
                        <div class="d-flex align-items-center mb-2 text-muted">
                            <i class="bi bi-geo-alt me-2"></i>
                            @item.Venue?.VenueName
                        </div>
                        <p class="card-text text-truncate">@item.Description</p>
                    </div>
                    <div class="card-footer bg-transparent border-0 d-flex justify-content-between">
                        <a asp-action="Edit" asp-route-id="@item.EventId" class="btn btn-sm btn-outline-warning">
                            <i class="bi bi-pencil me-1"></i>Edit
                        </a>
                        <a asp-action="Details" asp-route-id="@item.EventId" class="btn btn-sm btn-outline-info">
                            <i class="bi bi-info-circle me-1"></i>Details
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.EventId" class="btn btn-sm btn-outline-danger">
                            <i class="bi bi-trash me-1"></i>Delete
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Empty State -->
    <div id="emptyState" class="text-center py-5 d-none">
        <i class="bi bi-calendar-x" style="font-size: 4rem"></i>
        <h3 class="mt-3">No Events Found</h3>
        <p class="text-muted">Try adjusting your search criteria</p>
        <a asp-action="Create" class="btn btn-primary mt-2">
            <i class="bi bi-plus-circle me-2"></i>Create New Event
        </a>
    </div>
</div>

@section Styles {
    <style>
        .hover-card {
            transition: all 0.3s ease;
        }

            .hover-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
                border-color: #36D7B7 !important;
            }

        .event-img {
            height: 160px;
            object-fit: cover;
        }
    </style>
}

@section Scripts {
    <script>
        // Search and filtering functionality
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchEvents');
            const venueFilter = document.getElementById('venueFilter');
            const dateFilter = document.getElementById('dateFilter');
            const eventCards = document.querySelectorAll('.event-card');
            const eventContainer = document.getElementById('eventContainer');
            const emptyState = document.getElementById('emptyState');

            function filterEvents() {
                const searchTerm = searchInput.value.toLowerCase();
                const venueId = venueFilter.value;
                const dateValue = dateFilter.value;

                let visibleCount = 0;

                eventCards.forEach(card => {
                    const eventName = card.querySelector('.card-title').textContent.toLowerCase();
                    const eventVenue = card.getAttribute('data-venue-id');
                    const eventDate = new Date(card.getAttribute('data-event-date'));
                    const now = new Date();

                    let matchesSearch = eventName.includes(searchTerm);
                    let matchesVenue = venueId === '' || eventVenue === venueId;
                    let matchesDate = true;

                    if (dateValue === 'today') {
                        matchesDate = eventDate.toDateString() === now.toDateString();
                    } else if (dateValue === 'week') {
                        const weekEnd = new Date(now);
                        weekEnd.setDate(now.getDate() + 7);
                        matchesDate = eventDate >= now && eventDate <= weekEnd;
                    } else if (dateValue === 'month') {
                        const monthEnd = new Date(now);
                        monthEnd.setMonth(now.getMonth() + 1);
                        matchesDate = eventDate >= now && eventDate <= monthEnd;
                    }

                    const isVisible = matchesSearch && matchesVenue && matchesDate;
                    card.style.display = isVisible ? 'block' : 'none';

                    if (isVisible) visibleCount++;
                });

                // Show/hide empty state
                if (visibleCount === 0) {
                    eventContainer.classList.add('d-none');
                    emptyState.classList.remove('d-none');
                } else {
                    eventContainer.classList.remove('d-none');
                    emptyState.classList.add('d-none');
                }
            }

            searchInput.addEventListener('input', filterEvents);
            venueFilter.addEventListener('change', filterEvents);
            dateFilter.addEventListener('change', filterEvents);
        });
    </script>
}